apiVersion: psmdb.percona.com/v1
kind: PerconaServerMongoDB
metadata:
  name: test-cluster
spec:
  crVersion: 1.16.0
  image: percona/percona-server-mongodb:7.0.8-5
  imagePullPolicy: IfNotPresent
#  tls:
#    mode: preferTLS
#    # 90 days in hours
#    certValidityDuration: 2160h
#    allowInvalidCertificates: true
#    issuerConf:
#      name: special-selfsigned-issuer
#      kind: ClusterIssuer
#      group: cert-manager.io
  updateStrategy: SmartUpdate
  upgradeOptions:
    versionServiceEndpoint: https://check.percona.com
    apply: disabled
    schedule: "0 2 * * *"
    setFCV: false
  secrets:
    users: my-cluster-name-secrets
    encryptionKey: my-cluster-name-mongodb-encryption-key
#    vault: my-cluster-name-vault
#    ldapSecret: my-ldap-secret
#    sse: my-cluster-name-sse
  pmm:
    enabled: false
    image: percona/pmm-client:2.41.2
    serverHost: monitoring-service
#    mongodParams: --environment=ENVIRONMENT
#    mongosParams: --environment=ENVIRONMENT
  replsets:
  - name: rs0
    size: 3
    configuration: |
      operationProfiling:
        mode: slowOp
      systemLog:
        verbosity: 1
      storage:
        engine: wiredTiger
        wiredTiger:
          engineConfig:
            directoryForIndexes: false
            journalCompressor: snappy
          collectionConfig:
            blockCompressor: snappy
          indexConfig:
            prefixCompression: true
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    podDisruptionBudget:
      maxUnavailable: 1
    expose:
      enabled: false
      exposeType: ClusterIP
    resources:
      limits:
        cpu: "1"
        memory: "1G"
      requests:
        cpu: "300m"
        memory: "0.5G"
    volumeSpec:
      persistentVolumeClaim:
        resources:
          requests:
            storage: 3Gi
    nonvoting:
      enabled: false
      size: 3
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
      podDisruptionBudget:
        maxUnavailable: 1
#        minAvailable: 0
      resources:
        limits:
          cpu: "1"
          memory: "1G"
        requests:
          cpu: "300m"
          memory: "0.5G"
      volumeSpec:
#        emptyDir: {}
#        hostPath:
#          path: /data
#          type: Directory
        persistentVolumeClaim:
#          annotations:
#            volume.beta.kubernetes.io/storage-class: example-hostpath
#          labels:
#            rack: rack-22
#          storageClassName: standard
#          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 3Gi
    arbiter:
      enabled: false
      size: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
      resources:
        limits:
          cpu: "1"
          memory: "1G"
        requests:
          cpu: "300m"
          memory: "0.5G"
  sharding:
    enabled: true
    configsvrReplSet:
      size: 3
      configuration: |
        operationProfiling:
          mode: slowOp
        systemLog:
            verbosity: 1
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
      podDisruptionBudget:
        maxUnavailable: 1
      expose:
        enabled: false
        exposeType: ClusterIP
#        loadBalancerSourceRanges:
#          - 10.0.0.0/8
#        serviceAnnotations:
#          service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
#        serviceLabels:
#          rack: rack-22
      resources:
        limits:
          cpu: "1"
          memory: "1G"
        requests:
          cpu: "300m"
          memory: "0.5G"
      volumeSpec:
        persistentVolumeClaim:
          resources:
            requests:
              storage: 3Gi

    mongos:
      size: 2
      affinity:
        antiAffinityTopologyKey: "kubernetes.io/hostname"
      podDisruptionBudget:
        maxUnavailable: 1
      resources:
        limits:
          cpu: "1"
          memory: "1G"
        requests:
          cpu: "300m"
          memory: "0.5G"
      expose:
        exposeType: ClusterIP
  backup:
    enabled: true
    image: percona/percona-backup-mongodb:2.4.1
    pitr:
      enabled: false
      oplogOnly: false
#      oplogSpanMin: 10
      compressionType: gzip
      compressionLevel: 6
